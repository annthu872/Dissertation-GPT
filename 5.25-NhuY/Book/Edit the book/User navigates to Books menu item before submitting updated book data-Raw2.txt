Test Case: Test Case 1
testCaseName: Navigate to Books Menu and Submit Updated Book Data
objective: Verify that the user can navigate to the Books menu item, edit a book's details, and successfully submit the updated data.
testSteps:
  - Step 1: Log in to the application with valid credentials.
  - Step 2: Navigate to the Books menu item using the navbar.
  - Step 3: On the list of books, click the 'Update' button next to the book you wish to edit.
  - Step 4: On the displayed form, enter valid data for the book's Title, Author, Genre, Description, and Publication Date.
  - Step 5: Press the 'Submit' button to update the book's data.
expectedResult: The application updates the book in the database and redirects the user to the list of books, displaying the updated records.
explanation: This test case ensures that the user can navigate to the Books menu, edit a book's details through the provided form, and submit the updated data successfully. It covers the main scenario of editing and updating a book record.

Test Case: Test Case 2
testCaseName: Navigate to Books Menu and Cancel Book Data Update
objective: Verify that the user can navigate to the Books menu item, initiate editing a book's details but cancel the operation before submitting.
testSteps:
  - Step 1: Log in to the application with valid credentials.
  - Step 2: Navigate to the Books menu item using the navbar.
  - Step 3: On the list of books, click the 'Update' button next to the book you wish to edit.
  - Step 4: Start entering data into the form fields for the book's Title, Author, Genre, Description, and Publication Date.
  - Step 5: Press the 'Cancel' button before submitting the updated data.
expectedResult: The application does not update the book in the database and redirects the user to the list of books, showing the original records without changes.
explanation: This test case verifies that users have the option to cancel the book data update operation if they decide not to proceed with the changes. It aligns with the cancel operation scenario, ensuring the application behaves as expected when the cancel action is taken.

