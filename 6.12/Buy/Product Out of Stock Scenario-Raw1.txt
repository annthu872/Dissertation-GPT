Test Case: Test Case 1
testCaseName: Verify checkout process with items from multiple shops in the shopping cart
objective: Ensure the system correctly processes checkout for items from multiple shops, separating them into different orders as per the basic flow.
testSteps:
  - Step 1: Navigate to the shopping cart page after adding items from at least two different shops.
  - Step 2: Select items to checkout by clicking on the checkbox before each item.
  - Step 3: Verify the summary costs are displayed.
  - Step 4: Click the 'Checkout' button.
  - Step 5: Verify the user is redirected to a new page showing new orders for all the chosen items, with products from different shops separated into different orders.
expectedResult: The checkout process is completed successfully with products from different shops separated into different orders, each order displaying product information, quantity, price, shop details, promotion, shipping, and payment information.
explanation: This test case ensures that the basic flow of the checkout process is functioning as expected, especially the separation of products from different shops into distinct orders.

Test Case: Test Case 2
testCaseName: Verify inability to select out-of-stock items in the shopping cart
objective: Ensure that users cannot select out-of-stock items for checkout in the shopping cart.
testSteps:
  - Step 1: Navigate to the shopping cart page with items already added, including at least one out-of-stock item.
  - Step 2: Attempt to select the out-of-stock item by clicking on the checkbox before the item.
  - Step 3: Verify that the checkbox for the out-of-stock item cannot be selected.
expectedResult: The system prevents selection of out-of-stock items by disabling their checkboxes, ensuring they cannot be included in the checkout process.
explanation: This test case validates the exception flow where out-of-stock items cannot be selected for checkout, ensuring the system's reliability in handling stock availability.

Test Case: Test Case 3
testCaseName: Verify purchase flow from product detail page with all valid selections
objective: Ensure the system correctly processes a purchase made directly from the product detail page, including option and quantity selection.
testSteps:
  - Step 1: Perform the 'View a product detail' feature for a product with multiple options and sufficient stock.
  - Step 2: Select an available option for the product.
  - Step 3: Adjust the quantity within the available stock range using the minus or plus button.
  - Step 4: Click the 'Checkout' button.
  - Step 5: Verify the system processes to checkout, redirecting the user to the order page with the selected product details.
expectedResult: The checkout process is completed successfully from the product detail page with the selected product option and quantity, displaying all relevant order details.
explanation: This test case ensures that the alternative flow of purchasing directly from the product detail page works as expected, including the handling of product options and quantity adjustments.

Test Case: Test Case 4
testCaseName: Verify checkout button is disabled for invalid product selections
objective: Ensure the checkout button is disabled when attempting to purchase a product without selecting an available option or with an invalid quantity.
testSteps:
  - Step 1: Navigate to the product detail page of a product with multiple options and select an out-of-stock option, or do not select any option if all are in stock.
  - Step 2: Attempt to adjust the quantity to a number not within the valid range (e.g., higher than stock or less than one).
  - Step 3: Verify that the 'Checkout' button is disabled.
expectedResult: The 'Checkout' button remains disabled, preventing the user from proceeding with an invalid product selection.
explanation: This test case checks the exception flow where the system must prevent checkout with invalid product selections, ensuring a smooth and error-free purchase process.

