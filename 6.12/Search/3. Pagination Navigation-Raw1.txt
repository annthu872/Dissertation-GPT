Test Case: Test Case 1
testCaseName: Pagination Navigation on Search Results
objective: Verify that the user can navigate through search results pages using the pagination bar.
testSteps:
  - Step 1: Navigate to the search page.
  - Step 2: Enter a keyword in the search bar that will yield more than 60 results.
  - Step 3: Press enter or click the search icon.
  - Step 4: Scroll down to the bottom of the search results page to locate the pagination bar.
  - Step 5: Click on the '2' button in the pagination bar to navigate to the second page of search results.
  - Step 6: Once on the second page, click the 'left' button in the pagination bar to return to the first page.
  - Step 7: Click the 'right' button in the pagination bar to move to the second page again.
expectedResult: After Step 5, the user should see the second page of search results, indicating that pagination navigation is working. After Step 6, the user should return to the first page of search results. After Step 7, the user should navigate back to the second page of search results.
explanation: This test case ensures that users can navigate through multiple pages of search results using the pagination bar, which is a crucial feature for browsing search results efficiently. It directly tests the functionality described in the basic flow of the use case specification.

Test Case: Test Case 2
testCaseName: Pagination Navigation with No Search Results
objective: Verify that the pagination bar handles scenarios where no search results are found.
testSteps:
  - Step 1: Navigate to the search page.
  - Step 2: Enter a keyword in the search bar that is unlikely to yield any results.
  - Step 3: Press enter or click the search icon.
expectedResult: The system should display random product cards, and the pagination bar should either be hidden or disabled since there are no actual search results to navigate through.
explanation: This test case checks how the pagination feature behaves when no search results are found, as per the exception flow in the use case specification. It's important to ensure a graceful handling of no results scenarios for a good user experience.

