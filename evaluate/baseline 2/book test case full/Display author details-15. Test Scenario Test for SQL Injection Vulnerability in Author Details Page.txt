Test Case: Test Case 1
testCaseName: Verify Display of Author Details
objective: Verify that the application correctly displays the details of a selected author without any SQL injection vulnerability
testSteps:
  - Step 1: Navigate to the author list page.
  - Step 2: Click on the 'Title' of a specific author from the list.
  - Step 3: Observe the information displayed on the author details page.
expectedResult: The application should display the author details page with the following columns without any errors or unusual behavior: id (unique author number), Name, Bio (author's biography).

Test Case: Test Case 2
testCaseName: Test for SQL Injection in Author Details Page
objective: Verify that the application is secure against SQL injection attacks when displaying author details
testSteps:
  - Step 1: Navigate to the author list page.
  - Step 2: Use a browser's developer tools to modify the 'Title' link of an author to include an SQL injection payload (e.g., '1; DROP TABLE authors;--').
  - Step 3: Click on the modified 'Title' link.
  - Step 4: Observe the behavior of the application.
expectedResult: The application should either display an error message related to invalid input or simply show the author details without executing the malicious SQL code. There should be no indication of successful SQL injection (e.g., database error, unexpected application behavior).

