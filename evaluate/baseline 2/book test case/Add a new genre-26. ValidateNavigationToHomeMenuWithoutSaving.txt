Test Case: Test Case 1
testCaseName: Validate Successful Genre Creation
objective: Verify that a new genre can be successfully added to the database with valid data
testSteps:
  - Step 1: Navigate to the genre list page.
  - Step 2: Click the 'Create new' button.
  - Step 3: Enter valid data into the 'Name' and 'Description' fields.
  - Step 4: Press the 'Submit' button.
expectedResult: A new genre record is successfully added to the database, and the user is redirected to the list of genres with the newly added record visible.

Test Case: Test Case 2
testCaseName: Validate Incorrect Data Handling
objective: Verify that entering incorrect data when adding a new genre displays appropriate error messages
testSteps:
  - Step 1: Navigate to the genre list page.
  - Step 2: Click the 'Create new' button.
  - Step 3: Enter invalid data into the 'Name' and/or 'Description' fields.
  - Step 4: Press the 'Submit' button.
expectedResult: The application displays error messages related to the incorrect data entered, and the new genre record is not added to the database.

Test Case: Test Case 3
testCaseName: Validate Cancel Operation
objective: Verify that pressing the 'Cancel' button while adding a new genre cancels the operation and does not save data
testSteps:
  - Step 1: Navigate to the genre list page.
  - Step 2: Click the 'Create new' button.
  - Step 3: Start entering data into the 'Name' and 'Description' fields.
  - Step 4: Press the 'Cancel' button.
expectedResult: Data is not saved to the database, and the user is redirected to the list of genre records.

Test Case: Test Case 4
testCaseName: Validate Navigation Without Saving
objective: Verify that navigating away from the genre creation page without saving does not save the data
testSteps:
  - Step 1: Navigate to the genre list page.
  - Step 2: Click the 'Create new' button.
  - Step 3: Start entering data into the 'Name' and 'Description' fields.
  - Step 4: Without pressing 'Submit', navigate to another menu item like 'Books', 'Genres', 'Authors', 'Home', or 'API'.
expectedResult: Data is not saved to the database, and the user is redirected to the selected page with updated data displayed.

