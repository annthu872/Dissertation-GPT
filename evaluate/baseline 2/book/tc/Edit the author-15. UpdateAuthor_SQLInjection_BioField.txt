Test Case: Test Case 1
testCaseName: Update Author with Valid Data
objective: Verify that the author's details can be updated with valid data
testSteps:
  - Step 1: Navigate to the author list/details page.
  - Step 2: Click the 'Update' button next to the author you wish to update.
  - Step 3: On the displayed form, enter valid data for the author's Name and Bio.
  - Step 4: Press the 'Submit' button.
expectedResult: The author's details are updated in the database, and the list of authors with the updated records is displayed.

Test Case: Test Case 2
testCaseName: Update Author with Invalid Data
objective: Verify that the system displays error messages when invalid data is entered
testSteps:
  - Step 1: Navigate to the author list/details page.
  - Step 2: Click the 'Update' button next to the author you wish to update.
  - Step 3: On the displayed form, enter invalid data for the author's Name and/or Bio.
  - Step 4: Press the 'Submit' button.
expectedResult: Incorrect data messages are displayed, and the author's details are not updated in the database.

Test Case: Test Case 3
testCaseName: Cancel Update Author Operation
objective: Verify that the update operation can be canceled and no changes are saved
testSteps:
  - Step 1: Navigate to the author list/details page.
  - Step 2: Click the 'Update' button next to the author you wish to update.
  - Step 3: Start entering data into the form fields.
  - Step 4: Press the 'Cancel' button before pressing 'Submit'.
expectedResult: Data doesnâ€™t update in the database, and a list of author records is displayed.

Test Case: Test Case 4
testCaseName: Update Author with SQL Injection in Bio Field
objective: Verify that the system is secure against SQL Injection attacks via the Bio field
testSteps:
  - Step 1: Navigate to the author list/details page.
  - Step 2: Click the 'Update' button next to the author you wish to update.
  - Step 3: In the Bio field, enter an SQL injection payload (e.g., 'Robert'); DROP TABLE Authors;--').
  - Step 4: Press the 'Submit' button.
expectedResult: The system should display an error message or sanitize the input, preventing the SQL injection attack. The database remains unchanged except for the intended update.

