Test Case: Test Case 1
testCaseName: Successful Genre Creation
objective: Verify that a new genre can be successfully created and added to the database with valid data
testSteps:
  - Step 1: Navigate to the genre list page.
  - Step 2: Click the 'Create new' button.
  - Step 3: Enter valid data into the 'Name' and 'Description' fields of the genre form.
  - Step 4: Press the 'Submit' button.
expectedResult: A new genre record is successfully added to the database, and the user is redirected to the list of genres with the newly added record visible.
explanation: This test case ensures that when a user enters valid data for a new genre and submits the form, the new genre is correctly added to the database and displayed in the genre list. It directly tests the main scenario of the 'Add a new genre' use case.

Test Case: Test Case 2
testCaseName: Genre Creation with Incorrect Data
objective: Verify that the application displays error messages when incorrect data is entered in the genre creation form
testSteps:
  - Step 1: Navigate to the genre list page.
  - Step 2: Click the 'Create new' button.
  - Step 3: Enter invalid data into the 'Name' and/or 'Description' fields of the genre form.
  - Step 4: Press the 'Submit' button.
expectedResult: The application displays error messages related to the incorrect data, and the new genre record is not added to the database.
explanation: This test case checks the application's ability to validate user input and provide feedback when the data entered does not meet the required criteria. It is based on the validation step of the main scenario.

Test Case: Test Case 3
testCaseName: Cancel Genre Creation
objective: Verify that the genre creation process can be canceled without saving data to the database
testSteps:
  - Step 1: Navigate to the genre list page.
  - Step 2: Click the 'Create new' button.
  - Step 3: Start entering data into the 'Name' and 'Description' fields.
  - Step 4: Press the 'Cancel' button before submitting the form.
expectedResult: The data entered in the form is not saved to the database, and the user is redirected to the list of genre records without the new genre being added.
explanation: This test case verifies the cancel operation scenario, ensuring that users can opt-out of creating a new genre at any point before the final submission without affecting the database.

