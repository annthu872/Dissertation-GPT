Test Case: Test Case 1
testCaseName: Update Author with Valid Data and Script Tags in Bio
objective: Verify that the application prevents script injection by sanitizing input when updating an author's bio with script tags.
testSteps:
  - Step 1: Navigate to the author list/details page.
  - Step 2: Click the 'Update' button next to the author you wish to update.
  - Step 3: In the form displayed, enter or modify the author's name with valid data.
  - Step 4: In the bio field, enter a valid biography text including script tags (e.g., <script>alert('Test')</script>).
  - Step 5: Press the 'Submit' button.
expectedResult: The author's data is updated in the database without executing the script. The biography is sanitized, and script tags are removed or escaped. A success message is displayed, and the list of authors with updated records is shown without any script execution.
explanation: This test case is created to ensure that the application is secure against script injection attacks by validating and sanitizing user inputs, specifically within the bio field of an author's record.

Test Case: Test Case 2
testCaseName: Cancel Update Operation After Entering Script Tags in Bio
objective: Verify that the application does not update the author's bio with script tags if the user cancels the operation.
testSteps:
  - Step 1: Navigate to the author list/details page.
  - Step 2: Click the 'Update' button next to the author you wish to update.
  - Step 3: In the form displayed, enter or modify the author's name with valid data.
  - Step 4: In the bio field, enter a valid biography text including script tags (e.g., <script>alert('Test')</script>).
  - Step 5: Press the 'Cancel' button.
expectedResult: The update operation is canceled. The author's record remains unchanged in the database, and the user is redirected to the list of authors without the script being executed or saved.
explanation: This test case ensures that when a user cancels an update operation after entering potentially malicious script tags in the bio field, the application does not save these changes, maintaining the integrity and security of the data.

