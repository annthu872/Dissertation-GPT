Test Case: Test Case 1
testCaseName: Cancel Genre Deletion via Navigation to Genres
objective: Verify that the genre deletion process can be canceled and the user is navigated back to the genres list without deleting the genre.
testSteps:
  - Step 1: Navigate to the genre list/details page.
  - Step 2: Click the 'Delete' button next to the genre you wish to delete.
  - Step 3: On the confirmation dialog, press the 'Cancel' button.
  - Step 4: Observe the list of genres to confirm if the genre still exists.
  - Step 5: Navigate to the 'Genres' section from the menu.
expectedResult: The genre should not be deleted from the database, and the user should be redirected to the updated genres list where the genre still exists.
explanation: This test case ensures that when a user decides to cancel the deletion of a genre, the action is aborted, and the user is redirected back to the genres list without any changes made to the database. It directly tests the cancel operation scenario by simulating a user's navigation to 'Genres' after canceling the deletion.

Test Case: Test Case 2
testCaseName: Cancel Genre Deletion and Navigate to Different Section
objective: Verify that after canceling the genre deletion, navigating to a different section ('Books', 'Authors', 'Home', or 'API') does not delete the genre and displays the corresponding updated data.
testSteps:
  - Step 1: Navigate to the genre list/details page.
  - Step 2: Click the 'Delete' button next to the genre you wish to delete.
  - Step 3: On the confirmation dialog, press the 'Cancel' button.
  - Step 4: Navigate to the 'Books' section from the menu.
  - Step 5: Repeat steps 1-3, then navigate to the 'Authors' section from the menu.
  - Step 6: Repeat steps 1-3, then navigate to the 'Home' section from the menu.
  - Step 7: Repeat steps 1-3, then navigate to the 'API' section from the menu.
expectedResult: After canceling the genre deletion, navigating to any other section ('Books', 'Authors', 'Home', or 'API') should not delete the genre. The corresponding section should display updated data without the genre being removed.
explanation: This test case verifies that canceling a genre deletion and then navigating to a different section of the application does not inadvertently delete the genre. It ensures the integrity of the cancel operation across different sections of the application.

