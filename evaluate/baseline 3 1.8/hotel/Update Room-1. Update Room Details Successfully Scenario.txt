Test Case: Test Case 1
testCaseName: Update Room Details Successfully
objective: Verify that an employee can successfully update room details and receive a success message.
testSteps:
  - Step 1: Log in to the system as an employee.
  - Step 2: Navigate to the Room panel on the dashboard.
  - Step 3: Search or select a room by its ID that needs to be updated.
  - Step 4: Fill in the fields that need to be updated for the selected room.
  - Step 5: Press the update button.
expectedResult: The system should validate the fields, update the database, and display a success message indicating the room details have been successfully updated.
explanation: This test case ensures that the basic course of events for updating room details as described in the use case is functioning correctly. It tests the happy path where all inputs are valid and the update process completes successfully.

Test Case: Test Case 2
testCaseName: Update Room Details with Non-Existent Room
objective: Verify that the system shows a NOT FOUND message when trying to update a non-existent room.
testSteps:
  - Step 1: Log in to the system as an employee.
  - Step 2: Navigate to the Room panel on the dashboard.
  - Step 3: Search or select a room by an ID that does not exist in the database.
  - Step 4: Attempt to fill in any fields (if applicable).
  - Step 5: Press the update button (if applicable).
expectedResult: The system should display a NOT FOUND message, indicating the room does not exist in the database.
explanation: This test case checks the alternative path where the room intended for update does not exist in the database, ensuring the system correctly handles such cases.

Test Case: Test Case 3
testCaseName: Update Room Details with Invalid Field
objective: Verify that the system shows an invalid field entered message for each individual error when incorrect data is submitted.
testSteps:
  - Step 1: Log in to the system as an employee.
  - Step 2: Navigate to the Room panel on the dashboard.
  - Step 3: Search or select a room by its ID that needs to be updated.
  - Step 4: Fill in at least one field with invalid data.
  - Step 5: Press the update button.
expectedResult: The system should validate the fields and display an invalid field entered message for every individual error, without updating the database.
explanation: This test case verifies the alternative path where invalid data is entered into the update fields, ensuring the system properly validates input and provides feedback for corrections.

