Based on the provided use case specifications and test scenarios, here are detailed test cases for each scenario:

### 1. Successful Registration with Valid Username and Password

**Objective**: Verify that the system allows registration with a valid username and password.

- **Preconditions**: Learner is on the registration page.
- **Test Steps**:
  1. Enter a valid username (e.g., "UserExample123").
  2. Enter a valid password (e.g., "Password!123").
  3. Click the "Registry" button.
- **Expected Result**: The system redirects the learner to the Home page.

### 2. Successful Registration with Email

**Objective**: Verify that the system allows registration with a valid email.

- **Preconditions**: Learner is on the registration page.
- **Test Steps**:
  1. Click on the Mail icon.
  2. Enter a valid email (e.g., "example@mail.com").
  3. Enter a valid password (e.g., "Password!123").
  4. Click the "Registry" button.
- **Expected Result**: The system redirects the learner to the Home page.

### 3. Registration with Invalid Username

**Objective**: Verify that the system shows a notification for an invalid username.

- **Preconditions**: Learner is on the registration page.
- **Test Steps**:
  1. Enter an invalid username (e.g., "User").
  2. Enter a valid password (e.g., "Password!123").
  3. Click the "Registry" button.
- **Expected Result**: The system shows a notification that the username is invalid.

### 4. Registration with Invalid Password

**Objective**: Verify that the system shows a notification for an invalid password.

- **Preconditions**: Learner is on the registration page.
- **Test Steps**:
  1. Enter a valid username (e.g., "UserExample123").
  2. Enter an invalid password (e.g., "pass").
  3. Click the "Registry" button.
- **Expected Result**: The system shows a notification that the password is invalid.

### 5. Registration with Existed Username

**Objective**: Verify that the system shows a notification for an already registered username.

- **Preconditions**: The username "UserExample123" is already registered.
- **Test Steps**:
  1. Enter the username "UserExample123".
  2. Enter a valid password (e.g., "Password!123").
  3. Click the "Registry" button.
- **Expected Result**: The system shows a notification that this username has been registered.

### 6. Registration with Invalid Email

**Objective**: Verify that the system shows a notification for an invalid email.

- **Preconditions**: Learner is on the registration page.
- **Test Steps**:
  1. Click on the Mail icon.
  2. Enter an invalid email (e.g., "example@").
  3. Enter a valid password (e.g., "Password!123").
  4. Click the "Registry" button.
- **Expected Result**: The system shows a notification that the mail is invalid.

### 7. Registration with Password Same as Username

**Objective**: Verify that the system does not allow a password that is the same as the username.

- **Preconditions**: Learner is on the registration page.
- **Test Steps**:
  1. Enter a valid username (e.g., "UniqueUser123").
  2. Enter a password that is the same as the username ("UniqueUser123").
  3. Click the "Registry" button.
- **Expected Result**: The system shows a notification that the password is invalid.

### 8. Registration with Username Below Minimum Length

**Objective**: Verify that the system does not allow usernames below the minimum length.

- **Preconditions**: Learner is on the registration page.
- **Test Steps**:
  1. Enter a username below the minimum length (e.g., "User").
  2. Enter a valid password (e.g., "Password!123").
  3. Click the "Registry" button.
- **Expected Result**: The system shows a notification that the username is invalid.

### 9. Registration with Username Above Maximum Length

**Objective**: Verify that the system does not allow usernames above the maximum length.

- **Preconditions**: Learner is on the registration page.
- **Test Steps**:
  1. Enter a username above the maximum length (e.g., "ThisIsAVeryLongUsernameThatExceedsTheLimit").
  2. Enter a valid password (e.g., "Password!123").
  3. Click the "Registry" button.
- **Expected Result**: The system shows a notification that the username is invalid.

### 10. Registration with Password Below Minimum Length

**Objective**: Verify that the system does not allow passwords below the minimum length.

- **Preconditions**: Learner is on the registration page.
- **Test Steps**:
  1. Enter a valid username (e.g., "UserExample123").
  2. Enter a password below the minimum length (e.g., "Pass!1").
  3. Click the "Registry" button.
- **Expected Result**: The system shows a notification that the password is invalid.

### 11. Registration with Password Above Maximum Length

**Objective**: Verify that the system does not allow passwords above the maximum length.

- **Preconditions**: Learner is on the registration page.
- **Test Steps**:
  1. Enter a valid username (e.g., "UserExample123").
  2. Enter a password above the maximum length (e.g., "ThisIsAVeryLongPasswordThatExceedsTheLimit!1").
  3. Click the "Registry" button.
- **Expected Result**: The system shows a notification that the password is invalid.

### 12. Registration with Password Missing Special Character

**Objective**: Verify that the system does not allow passwords missing a special character.

- **Preconditions**: Learner is on the registration page.
- **Test Steps**:
  1. Enter a valid username (e.g., "UserExample123").
  2. Enter a password missing a special character (e.g., "Password123").
  3. Click the "Registry" button.
- **Expected Result**: The system shows a notification that the password is invalid.

### 13. Registration with Password Missing Number

**Objective**: Verify that the system does not allow passwords missing a number.

- **Preconditions**: Learner is on the registration page.
- **Test Steps**:
  1. Enter a valid username (e.g., "UserExample123").
  2. Enter a password missing a number (e.g., "Password!").
  3. Click the "Registry" button.
- **Expected Result**: The system shows a notification that the password is invalid.

### 14. Registration with Password Missing Capital Letter

**Objective**: Verify that the system does not allow passwords missing a capital letter.

- **Preconditions**: Learner is on the registration page.
- **Test Steps**:
  1. Enter a valid username (e.g., "UserExample123").
  2. Enter a password missing a capital letter (e.g., "password!123").
  3. Click the "Registry" button.
- **Expected Result**: The system shows a notification that the password is invalid.

### 15. Registration with Password Missing Normal Character

**Objective**: Verify that the system does not allow passwords missing a normal character.

- **Preconditions**: Learner is on the registration page.
- **Test Steps**:
  1. Enter a valid username (e.g., "UserExample123").
  2. Enter a password missing a normal character (e.g., "PASSWORD!123").
  3. Click the "Registry" button.
- **Expected Result**: The system shows a notification that the password is invalid.

### 16. Registration with Email in Wrong Format

**Objective**: Verify that the system does not allow emails in the wrong format.

- **Preconditions**: Learner is on the registration page.
- **Test Steps**:
  1. Click on the Mail icon.
  2. Enter an email in the wrong format (e.g., "examplemail.com").
  3. Enter a valid password (e.g., "Password!123").
  4. Click the "Registry" button.
- **Expected Result**: The system shows a notification that the mail is invalid.

### 17. Registration with Non-Existent Email

**Objective**: Verify that the system does not allow non-existent emails.

- **Preconditions**: Learner is on the registration page.
- **Test Steps**:
  1. Click on the Mail icon.
  2. Enter a non-existent email (e.g., "nonexistentemail@example.com").
  3. Enter a valid password (e.g., "Password!123").
  4. Click the "Registry" button.
- **Expected Result**: The system shows a notification that the mail is invalid.

These test cases cover a wide range of scenarios to ensure the registration process works as expected and handles errors gracefully.